-- | Make a list of hands for testing


-- | 1.0 Trivial Patterns

chickenHand :: [([Char], [(Char, Int)])]
chickenHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
              , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
              , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
              , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
              , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
              , (['b'], [('F', 1), ('S', 2)])
              ]

allChowsHand :: [([Char], [(Char, Int)])] 
allChowsHand = [ (['n', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
               , (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
               , (['r', 'c', 'B', 'S'], [('B', 2), ('B', 3), ('B', 4)])
               , (['r', 'c', 'K', 'T'], [('K', 1), ('K', 2), ('K', 3)])
               , (['n', 'e', 'D'], [('D', 1), ('D', 1)])
               , (['b'], [('F', 1), ('S', 2)])
               ]

concealedHand :: [([Char], [(Char, Int)])] 
concealedHand = [ (['n', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                , (['n', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                , (['n', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                , (['n', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
                , (['b'], [('F', 1), ('S', 2)])
                ]

selfDrawnHand :: [([Char], [(Char, Int)])]
selfDrawnHand = []

allSimpleHand2 :: [([Char], [(Char, Int)])]
allSimpleHand2 = [ (['n', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                 , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                 , (['r', 'p', 'B', 'S'], [('B', 3), ('B', 3), ('B', 3)])
                 , (['r', 'p', 'K', 'S'], [('K', 2), ('K', 2), ('K', 2)])
                 , (['r', 'e', 'B', 'S'], [('B', 2), ('B', 2)])
                 , (['b'], [('F', 1), ('S', 2)])
                 ]

allSimpleHand2 = [([Char], [(Char, Int)])]
allSimpleHand2 = [ (['n', 'e', 'C', 'S'], [('C', 2), ('C', 2)])
                 , (['n', 'e', 'C', 'S'], [('C', 5), ('C', 5)])
                 , (['n', 'e', 'C', 'S'], [('C', 8), ('C', 8)])
                 , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                 , (['n', 'e', 'B', 'S'], [('B', 6), ('B', 6)])
                 , (['n', 'e', 'B', 'S'], [('B', 8), ('B', 8)])
                 , (['r', 'e', 'K', 'S'], [('K', 8), ('K', 8)])
                 ]

AllTypesHand :: [([Char], [(Char, Int)])]
AllTypesHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
               , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
               , (['r', 'c', 'K', 'T'], [('K', 1), ('K', 2), ('K', 3)])
               , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
               , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
               , (['b'], [('F', 1)])
               ]


-- | 2.0 Identical Chows

twoIdenticalChowsHand :: [([Char], [(Char, Int)])]
twoIdenticalChowsHand = [ (['n', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                        , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                        , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                        , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                        , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                        ]

twoIdenticalChowsTwiceHand :: [([Char], [(Char, Int)])]
twoIdenticalChowsTwiceHand = [ (['n', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                             , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                             , (['r', 'p', 'W'], [('B', 4), ('B', 5), ('B', 6)])
                             , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                             , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                             ]

threeIdenticalChowsHand :: [([Char], [(Char, Int)])]
threeIdenticalChowsHand = [ (['n', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                          , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                          , (['r', 'p', 'B', 'W'], [('B', 4), ('B', 5), ('B', 6)])
                          , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                          , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                          ]

fourIdenticalChowsHand :: [([Char], [(Char, Int)])]
fourIdenticalChowsHand = [ (['n', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                         , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                         , (['r', 'p', 'C', 'W'], [('C', 6), ('C', 7), ('C', 8)])
                         , (['r', 'c', 'C', 'S'], [('C', 6), ('C', 7), ('C', 8)])
                         , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                         ]


-- | 3.0 Pungs and Kongs

allPungsHand :: [([Char], [(Char, Int)])]
allPungsHand = [ (['n', 'k', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
               , (['r', 'p', 'C', 'S'], [('C', 7), ('C', 7), ('C', 7)])
               , (['r', 'p', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2)])
               , (['r', 'p', 'Â­K', 'S'], [('K', 3), ('K', 3), ('K', 3)])
               , (['n', 'e', 'D'], [('D', 1), ('D', 1)])
               ]

twoConcealedPungsHand :: [([Char], [(Char, Int)])]
twoConcealedPungsHand = [ (['n', 'k', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
                        , (['n', 'p', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2)])
                        , (['r', 'p', 'C', 'S'], [('C', 7), ('C', 7), ('C', 7)])
                        , (['r', 'k', 'K', 'S'], [('K', 3), ('K', 3), ('K', 3), ('K', 3)])
                        , (['n', 'e', 'D'], [('D', 1), ('D', 1)])
                        ]

threeConcealedPungsHand :: [([Char], [(Char, Int)])]
threeConcealedPungsHand = [ (['n', 'k', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
                          , (['n', 'p', 'B', 'S'], [('B', 1), ('B', 2), ('B', 2)])
                          , (['n', 'k', 'K', 'S'], [('K', 3), ('K', 3), ('K', 3), ('K', 3)])
                          , (['r', 'p', 'C', 'S'], [('C', 7), ('C', 7), ('C', 7)])
                          , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
                          ]

fourConcealedPunsgHand :: [([Char], [(Char, Int)])]
fourConcealedPunsgHand = [ (['n', 'k', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
                         , (['n', 'p', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2)])
                         , (['n', 'k', 'K', 'S'], [('K', 3), ('K', 3), ('K', 3), ('K', 3)])
                         , (['n', 'p', 'C', 'S'], [('C', 7), ('C', 7), ('C', 7)])
                         , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
                         , (['b'], [('F', 1), ('S', 2)])
                         ]

oneKongHand :: [([Char], [(Char, Int)])]
oneKongHand = [ (['n', 'k', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
              , (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
              , (['r', 'c', 'B', 'S'], [('B', 2), ('B', 3), ('B', 4)])
              , (['r', 'c', 'K', 'T'], [('K', 1), ('K', 2), ('K', 3)])
              , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
              , (['b'], [('F', 1), ('S', 2)])
              ]

twoKongsHand :: [([Char], [(Char, Int)])]
twoKongsHand = [ (['n', 'k', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
               , (['r', 'k', 'C', 'T'], [('C', 7), ('C', 7), ('C', 7), ('C', 7)])
               , (['r', 'c', 'B', 'S'], [('B', 2), ('B', 3), ('B', 4)])
               , (['r', 'c', 'K', 'S'], [('K', 3), ('K', 4), ('K', 5)])
               , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
               , (['b'], [('F', 1), ('S', 2)])
               ]

threeKongsHand :: [([Char], [(Char, Int)])]
threeKongsHand = [ (['n', 'k', 'C', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
                 , (['r', 'k', 'C', 'S'], [('C', 7), ('C', 7), ('C', 7), ('C', 7)])
                 , (['r', 'k', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2), ('B', 2)])
                 , (['r', 'c', 'K', 'S'], [('K', 3), ('K', 4), ('K', 5)])
                 , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
                 , (['b'], [('F', 1), ('S', 2)])
                 ]

fourKongsHand :: [([Char], [(Char, Int)])]
fourKongsHand = [ (['n', 'k', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4), ('B', 4)])
                , (['r', 'k', 'C', 'S'], [('C', 7), ('C', 7), ('C', 7), ('C', 7)])
                , (['r', 'k', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2), ('B', 2)])
                , (['r', 'k', 'K', 'S'], [('K', 3), ('K', 3), ('K', 3), ('K', 3)])
                , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
                , (['b'], [('F', 1), ('S', 2)])
                ]


-- | 4.0 Similar Sets

threeSimilarChowsHand :: [([Char], [(Char, Int)])]
threeSimilarChowsHand = [ (['c', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                        , (['r', 'c', 'C', 'S'], [('C', 4), ('C', 5), ('C', 6)])
                        , (['r', 'p', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2)])
                        , (['r', 'c', 'K', 'S'], [('K', 4), ('K', 5), ('K', 6)])
                        , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
                        ]

littleThreeSimilarPungsHand :: [([Char], [(Char, Int)])]
littleThreeSimilarPungsHand = [ (['n', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                              , (['r', 'p', 'C', 'S'], [('C', 4), ('C', 4), ('C', 4)])
                              , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                              , (['n', 'k', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2), ('B', 2)])
                              , (['r', 'e', 'K', 'S'], [('K', 4), ('K', 4)])
                              ]

threeSimilarPungsHand :: [([Char], [(Char, Int)])]
threeSimilarPungsHand = [ (['n', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                        , (['r', 'p', 'C', 'S'], [('C', 4), ('C', 4), ('C', 4)])
                        , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                        , (['r', 'p', 'K', 'T'], [('K', 4), ('K', 4), ('K', 4)])
                        , (['n', 'e', 'D'], [('D', 1), ('D', 1)])
                        ]


-- | 5.0 Consecutive Sets

nineTileStraightHand :: [([Char], [(Char, Int)])]
nineTileStraightHand = [ (['n', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                       , (['n', 'c', 'C', 'T'], [('C', 1), ('C', 2), ('C', 3)])
                       , (['r', 'c', 'C', 'S'], [('C', 4), ('C', 5), ('C', 6)])
                       , (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                       , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                       ]

threeConsecutivePungsHand1 :: [([Char], [(Char, Int)])]
threeConsecutivePungsHand1 = [ (['n', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                             , (['r', 'p', 'B', 'S'], [('B', 5), ('B', 5), ('B', 5)])
                             , (['r', 'p', 'B', 'S'], [('B', 6), ('B', 6), ('B', 6)])
                             , (['r', 'c', 'C', 'T'], [('C', 1), ('C', 2), ('C', 2)])
                             , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                             ]

threeConsecutivePungsHand2 :: [([Char], [(Char, Int)])]
threeConsecutivePungsHand2 = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 2)])
                             , (['n', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                             , (['r', 'p', 'B', 'S'], [('B', 5), ('B', 5), ('B', 5)])
                             , (['r', 'p', 'B', 'S'], [('B', 6), ('B', 6), ('B', 6)])
                             , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                             ]

fourConsecutivePungsHand :: [([Char], [(Char, Int)])]
fourConsecutivePungsHand = [ (['n', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                           , (['r', 'p', 'B', 'S'], [('B', 5), ('B', 5), ('B', 5)])
                           , (['r', 'p', 'B', 'S'], [('B', 6), ('B', 6), ('B', 6)])
                           , (['r', 'p', 'B', 'S'], [('B', 7), ('B', 7), ('B', 7)])
                           , (['n', 'e', 'C', 'S'], [('C', 4), ('C', 4)])
                           ]

threeMothersHand :: [([Char], [(Char, Int)])]
threeMothersHand = [ (['n', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                   , (['r', 'p', 'B', 'S'], [('B', 5), ('B', 5), ('B', 5)])
                   , (['r', 'p', 'B', 'S'], [('B', 6), ('B', 6), ('B', 6)])
                   , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                   , (['n', 'e', 'C', 'S'], [('C', 4), ('C', 4)])
                   ]


-- | 6.0 Suit Patterns

mixedOneSuitHand1 :: [([Char], [(Char, Int)])]
mixedOneSuitHand1 = [ (['n', 'p', 'B', 'S'], [('B', 3), ('B', 3), ('B', 3)])
                    , (['r', 'p', 'W'], [('W', 4), ('W', 4), ('W', 4)])
                    , (['r', 'p', 'D'], [('D', 1), ('D', 1), ('D', 1)])
                    , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                    , (['n', 'e', 'B', 'S'], [('B', 8), ('B', 8)])
                    ]

mixedOneSuitHand2 :: [([Char], [(Char, Int)])]
mixedOneSuitHand2 = [ (['n', 'e', 'B', 'T'], [('B', 1), ('B', 1)])
                    , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                    , (['n', 'e', 'B', 'S'], [('B', 5), ('B', 5)])
                    , (['n', 'e', 'B', 'S'], [('B', 6), ('B', 6)])
                    , (['n', 'e', 'W'], [('W', 2), ('W', 2)])
                    , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                    , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
                    ]

pureOneSuitHand1 :: [([Char], [(Char, Int)])]
pureOneSuitHand1 = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                   , (['r', 'p', 'B', 'S'], [('B', 4), ('B', 4), ('B', 4)])
                   , (['r', 'c', 'B', 'S'], [('B', 6), ('B', 7), ('B', 8)])
                   , (['r', 'c', 'B', 'S'], [('B', 5), ('B', 6), ('B', 7)])
                   , (['n', 'e', 'B', 'T'], [('B', 9), ('B', 9)])
                   ]

pureOneSuitHand2 :: [([Char], [(Char, Int)])]
pureOneSuitHand2 = [ (['n', 'e', 'B', 'T'], [('B', 1), ('B', 1)])
                   , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                   , (['n', 'e', 'B', 'S'], [('B', 4), ('B', 4)])
                   , (['n', 'e', 'B', 'S'], [('B', 5), ('B', 5)])
                   , (['n', 'e', 'B', 'S'], [('B', 6), ('B', 6)])
                   , (['n', 'e', 'B', 'S'], [('B', 8), ('B', 8)])
                   , (['r', 'e', 'B', 'T'], [('B', 9), ('B', 9)])
                   ]

littleTerminalClubHand :: [([Char], [(Char, Int)])]
littleTerminalClubHand = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                         , (['r', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                         , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                         , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                         , (['n', 'e', 'S'], [('B', 5), ('B', 5)])
                         ]

bigTerminalClubHand :: [([Char], [(Char, Int)])]
bigTerminalClubHand = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                      , (['r', 'p', 'B', 'T'], [('B', 1), ('B', 1), ('B', 1)])
                      , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                      , (['r', 'p', 'B', 'T'], [('B', 9), ('B', 9), ('B', 9)])
                      , (['n', 'e', 'S'], [('B', 5), ('B', 5)])
                      ]

nineGatesHand :: [([Char], [(Char, Int)])]
nineGatesHand = [ ( ['r', 'h', 'B', 'T', 'S']
                  , [('B', 1), ('B', 1)
                     ('B', 1), ('B', 2), ('B', 3)
                     ('B', 4), ('B', 5), ('B', 6)
                     ('B', 6), ('B', 7), ('B', 8)
                     ('B', 9), ('B', 9), ('B', 9)
                    ]
                  )
                , (['b'], [('F', 3)])
                ]


-- | 7.0 Terminal Tiles

twoTailedTerminalChowsHand1 :: [([Char], [(Char, Int)])]
twoTailedTerminalChowsHand1 = [ (['n', 'p', 'C', 'S'], [('C', 3), ('C', 3), ('C', 3)])
                              , (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                              , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                              , (['r', 'c', 'K', 'S'], [('K', 5), ('K', 6), ('K', 7)])
                              , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                              ]

twoTailedTerminalChowsHand2 :: [([Char], [(Char, Int)])]
twoTailedTerminalChowsHand2 = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                              , (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                              , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                              , (['r', 'c', 'K', 'S'], [('K', 5), ('K', 6), ('K', 7)])
                              , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                              ]

twoTailedTerminalChowsHand3 :: [([Char], [(Char, Int)])]
twoTailedTerminalChowsHand3 = [ (['n', 'c', 'C', 'T'], [('C', 1), ('C', 2), ('C', 3)])
                              , (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                              , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                              , (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                              , (['n', 'e', 'K'], [('K', 4), ('K', 4)])
                              ]

twoTailedTerminalPungsHand1 :: [([Char], [(Char, Int)])]
twoTailedTerminalPungsHand1 = [ (['n', 'p', 'C', 'S'], [('C', 3), ('C', 3), ('C', 3)])
                              , (['n', 'p', 'B', 'T'], [('B', 1), ('B', 1), ('B', 1)])
                              , (['r', 'p', 'B', 'T'], [('B', 9), ('B', 9), ('B', 9)])
                              , (['r', 'c', 'K', 'S'], [('K', 5), ('K', 6), ('K', 7)])
                              , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                              ]

twoTailedTerminalPungsHand2 :: [([Char], [(Char, Int)])]
twoTailedTerminalPungsHand2 = [ (['n', 'p', 'C', 'T'], [('C', 1), ('C', 1), ('C', 1)])
                              , (['n', 'p', 'B', 'T'], [('B', 1), ('B', 1), ('B', 1)])
                              , (['r', 'p', 'B', 'T'], [('B', 9), ('B', 9), ('B', 9)])
                              , (['r', 'p', 'C', 'T'], [('C', 9), ('C', 9), ('C', 9)])
                              , (['n', 'e', 'K'], [('K', 4), ('K', 4)])
                              ]

littleBoundlessMountainHand1 :: [([Char], [(Char, Int)])]
littleBoundlessMountainHand1 = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                               , (['r', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                               , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                               , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                               , (['n', 'e', 'B', 'T'], [('B', 9), ('B', 9)])
                               ]

littleBoundlessMountainHand2 :: [([Char], [(Char, Int)])]
littleBoundlessMountainHand2 = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                               , (['r', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                               , (['r', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                               , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                               , (['n', 'e', 'B', 'T'], [('B', 9), ('B', 9)])
                               ]

bigBoundlessMountainHand1 :: [([Char], [(Char, Int)])]
bigBoundlessMountainHand1 = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                            , (['r', 'p', 'B', 'T'], [('B', 1), ('B', 1), ('B', 1)])
                            , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                            , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                            , (['n', 'e', 'B', 'T'], [('B', 9), ('B', 9)])
                            ]

bigBoundlessMountainHand2 :: [([Char], [(Char, Int)])]
bigBoundlessMountainHand2 = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                            , (['r', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                            , (['r', 'c', 'B', 'T'], [('B', 7), ('B', 8), ('B', 9)])
                            , (['r', 'p', 'B', 'T'], [('B', 9), ('B', 9), ('B', 9)])
                            , (['n', 'e', 'B', 'T'], [('B', 1), ('B', 1)])
                            ]

mixedLesserTerminalHand :: [([Char], [(Char, Int)])]
mixedLesserTerminalHand = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                          , (['r', 'p', 'C', 'T'], [('C', 1), ('C', 1), ('C', 1)])
                          , (['r', 'c', 'K', 'T'], [('K', 7), ('K', 8), ('K', 9)])
                          , (['r', 'p', 'D'], [('D', 2), ('D', 2), ('D', 2)])
                          , (['n', 'e', 'W'], [('W', 1), ('W', 1)])
                          ]

pureLesserTerminalHand :: [([Char], [(Char, Int)])]
pureLesserTerminalHand = [ (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                         , (['r', 'p', 'C', 'T'], [('C', 1), ('C', 1), ('C', 1)])
                         , (['r', 'c', 'K', 'T'], [('K', 7), ('K', 8), ('K', 9)])
                         , (['r', 'p', 'B', 'T'], [('B', 9), ('B', 9), ('B', 9)])
                         , (['n', 'e', 'K', 'T'], [('K', 1), ('K', 1)])
                         ]

mixedGreaterTerminalHand1 :: [([Char], [(Char, Int)])]
mixedGreaterTerminalHand1 = [ (['n', 'p', 'K', 'T'], [('K', 1), ('K', 1), ('K', 1)])
                            , (['r', 'p', 'C', 'T'], [('C', 9), ('C', 9), ('C', 9)])
                            , (['r', 'p', 'B', 'T'], [('B', 9), ('B', 9), ('B', 9)])
                            , (['r', 'p', 'D'], [('D', 2), ('D', 2), ('D', 2)])
                            , (['n', 'e', 'W'], [('W', 1), ('W', 1)])
                            ]

mixedGreaterTerminalHand2 :: [([Char], [(Char, Int)])]
mixedGreaterTerminalHand2 = [ (['n', 'e', 'C', 'T'], [('C', 9), ('C', 9)])
                            , (['n', 'e', 'B', 'T'], [('B', 1), ('B', 1)])
                            , (['n', 'e', 'B', 'T'], [('B', 9), ('B', 9)])
                            , (['n', 'e', 'K', 'T'], [('K', 1), ('K', 1)])
                            , (['n', 'e', 'W'], [('W', 2), ('W', 2)])
                            , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                            , (['r', 'e', 'D'], [('D', 1), ('D', 1)])
                            ]

pureGreaterTerminalHand1 :: [([Char], [(Char, Int)])]
pureGreaterTerminalHand1 = [ (['n', 'p', 'C', 'T'], [('C', 1), ('C', 1), ('C', 1)])
                           , (['r', 'p', 'C', 'T'], [('C', 9), ('C', 9), ('C', 9)])
                           , (['r', 'p', 'B', 'T'], [('B', 1), ('B', 1), ('B', 1)])
                           , (['r', 'p', 'B', 'T'], [('B', 9), ('B', 9), ('B', 9)])
                           , (['n', 'e', 'K', 'T'], [('K', 9), ('K', 9)])
                           ]

pureGreaterTermimalHand2 :: [([Char], [(Char, Int)])]
pureGreaterTermimalHand2 = [ (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                           , (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                           , (['n', 'e', 'C', 'T'], [('C', 9), ('C', 9)])
                           , (['n', 'e', 'B', 'T'], [('B', 1), ('B', 1)])
                           , (['n', 'e', 'B', 'T'], [('B', 9), ('B', 9)])
                           , (['n', 'e', 'K', 'T'], [('K', 1), ('K', 1)])
                           , (['r', 'e', 'K', 'T'], [('K', 9), ('K', 9)])
                           ]


-- | 8.0 Honor Tiles

dragonPungHand :: [([Char], [(Char, Int)])]
dragonPungHand = [ (['n', 'p', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2)])
                 , (['n', 'c', 'K', 'S'], [('K', 3), ('K', 4), ('K', 5)])
                 , (['r', 'c', 'C', 'T'], [('C', 1), ('C', 2), ('C', 3)])
                 , (['r', 'p', 'D'], [('D', 1), ('D', 1), ('D', 1)])
                 , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                 , (['b'], [('F', 4)])
                 ]

seatWindHand :: [([Char], [(Char, Int)])]
seatWindHand = [ (['n', 'p', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2)])
               , (['n', 'c', 'K', 'S'], [('K', 3), ('K', 4), ('K', 5)])
               , (['r', 'c', 'C', 'T'], [('C', 1), ('C', 2), ('C', 3)])
               , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
               , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
               , (['b'], [('F', 4)])
               , ]

littleThreeWindsHand :: [([Char], [(Char, Int)])]
littleThreeWindsHand = [ (['n', 'p', 'C', 'S'], [('C', 2), ('C', 2), ('C', 2)])
                       , (['n', 'p', 'W'], [('W', 3), ('W', 3), ('W', 3)])
                       , (['r', 'c', 'K', 'T'], [('K', 1), ('K', 2), ('K', 3)])
                       , (['r', 'p', 'W'], [('W', 4), ('W', 4), ('W', 4)])
                       , (['r', 'e', 'W'], [('W', 1), ('W', 1)])
                       , (['b'], [('F', 4)])
                       ]

bigThreeWindsHand :: [([Char], [(Char, Int)])]
bigThreeWindsHand = [ (['n', 'p', 'W'], [('W', 2), ('W', 2), ('W', 2)])
                    , (['n', 'p', 'W'], [('W', 3), ('W', 3), ('W', 3)])
                    , (['r', 'c', 'K', 'T'], [('K', 1), ('K', 2), ('K', 3)])
                    , (['r', 'p', 'W'], [('W', 4), ('W', 4), ('W', 4)])
                    , (['r', 'e', 'C', 'S'], [('C', 4), ('C', 4)])
                    , (['b'], [('F', 4)])
                    ]

littleFourWindsHand :: [([Char], [(Char, Int)])]
littleFourWindsHand = [ (['n', 'p', 'W'], [('W', 2), ('W', 2), ('W', 2)])
                      , (['n', 'c', 'K', 'T'], [('K', 1), ('K', 2), ('K', 3)])
                      , (['r', 'p', 'W'], [('W', 3), ('W', 3), ('W', 3)])
                      , (['r', 'p', 'W'], [('W', 4), ('W', 4), ('W', 4)])
                      , (['r', 'e', 'W'], [('W', 1), ('W', 1)])
                      , (['b'], [('F', 4)])
                      ]

bigFourWindsHand :: [([Char], [(Char, Int)])]
bigFourWindsHand = [ (['n', 'p', 'W'], [('W', 2), ('W', 2), ('W', 2)])
                   , (['r', 'p', 'W'], [('W', 3), ('W', 3), ('W', 3)])
                   , (['r', 'p', 'W'], [('W', 4), ('W', 4), ('W', 4)])
                   , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                   , (['r', 'e', 'C', 'S'], [('C', 4), ('C', 4)])
                   , (['b'], [('F', 4)])
                   ]

littleThreeDragonsHand :: [([Char], [(Char, Int)])]
littleThreeDragonsHand = [ (['n', 'p', 'D'], [('D', 2), ('D', 2), ('D', 2)])
                         , (['n', 'c', 'K', 'S'], [('K', 3), ('K', 4), ('K', 5)])
                         , (['r', 'p', 'C', 'T'], [('C', 1), ('C', 1), ('C', 1)])
                         , (['r', 'p', 'D'], [('D', 1), ('D', 1), ('D', 1)])
                         , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                         ]

bigThreeDragonsHand :: [([Char], [(Char, Int)])]
bigThreeDragonsHand = [ (['n', 'p', 'D'], [('D', 2), ('D', 2), ('D', 2)])
                      , (['n', 'c', 'B', 'T'], [('B', 1), ('B', 2), ('B', 3)])
                      , (['r', 'p', 'D'], [('D', 1), ('D', 1), ('D', 1)])
                      , (['r', 'p', 'D'], [('D', 3), ('D', 3), ('D', 3)])
                      , (['r', 'e', 'C', 'S'], [('C', 3), ('C', 3)])
                      ]

allHonorsHand1 :: [([Char], [(Char, Int)])]
allHonorsHand1 = [ (['n', 'p', 'D'], [('D', 2), ('D', 2), ('D', 2)])
                 , (['n', 'p', 'W'], [('W', 3), ('W', 3), ('W', 3)])
                 , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                 , (['r', 'p', 'D'], [('D', 1), ('D', 1), ('D', 1)])
                 , (['r', 'e', 'W'], [('W', 4), ('W', 4)])
                 ]

allHonorsHand2 :: [([Char], [(Char, Int)])]
allHonorsHand2 = [ (['n', 'e', 'W'], [('W', 1), ('W', 1)])
                 , (['n', 'e', 'W'], [('W', 2), ('W', 2)])
                 , (['n', 'e', 'W'], [('W', 2), ('W', 2)])
                 , (['n', 'e', 'D'], [('D', 1), ('D', 1)])
                 , (['n', 'e', 'D'], [('D', 2), ('D', 2)])
                 , (['n', 'e', 'D'], [('D', 3), ('D', 3)])
                 , (['r', 'e', 'W'], [('W', 4), ('W', 4)])
                 ]

allHonorPairsHand :: [([Char], [(Char, Int)])]
allHonorPairsHand = [ (['n', 'e', 'W'], [('W', 1), ('W', 1)])
                    , (['n', 'e', 'W'], [('W', 2), ('W', 2)])
                    , (['n', 'e', 'W'], [('W', 3), ('W', 3)])
                    , (['n', 'e', 'D'], [('D', 1), ('D', 1)])
                    , (['n', 'e', 'D'], [('D', 2), ('D', 2)])
                    , (['n', 'e', 'D'], [('D', 3), ('D', 3)])
                    , (['r', 'e', 'W'], [('W', 4), ('W', 4)])
                    ]


-- | 9.0 Seven Pairs

sevenPairsHand1 :: [([Char], [(Char, Int)])]
sevenPairsHand1 = [ (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                  , (['n', 'e', 'C', 'S'], [('C', 7), ('C', 7)])
                  , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                  , (['n', 'e', 'K', 'S'], [('K', 6), ('K', 6)])
                  , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                  , (['n', 'e', 'D'], [('D', 2), ('D', 2)])
                  , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                  ]

sevenPairsHand2 :: [([Char], [(Char, Int)])]
sevenPairsHand2 = [ (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                  , (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                  , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                  , (['n', 'e', 'K', 'S'], [('K', 6), ('K', 6)])
                  , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                  , (['n', 'e', 'D'], [('D', 2), ('D', 2)])
                  , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                  ]

sevenPairsHand3 :: [([Char], [(Char, Int)])]
sevenPairsHand3 = [ (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                  , (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                  , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                  , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                  , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                  , (['n', 'e', 'D'], [('D', 2), ('D', 2)])
                  , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                  ]

sevenPairsHand4 :: [([Char], [(Char, Int)])]
sevenPairsHand4 = [ (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                  , (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                  , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                  , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                  , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                  , (['n', 'e', 'W'], [('W', 4), ('W', 4)])
                  , (['r', 'e', 'D'], [('D', 3), ('D', 3)])
                  ]

sevenShiftedPairsHand1 :: [([Char], [(Char, Int)])]
sevenShiftedPairsHand1 = [ (['n', 'e', 'C', 'T'], [('C', 1), ('C', 1)])
                         , (['n', 'e', 'C', 'S'], [('C', 2), ('C', 2)])
                         , (['n', 'e', 'C', 'S'], [('C', 3), ('C', 3)])
                         , (['n', 'e', 'C', 'S'], [('C', 4), ('C', 4)])
                         , (['n', 'e', 'C', 'S'], [('C', 5), ('C', 5)])
                         , (['n', 'e', 'C', 'S'], [('C', 6), ('C', 6)])
                         , (['r', 'e', 'C', 'S'], [('C', 7), ('C', 7)])
                         ]

sevenShiftedPairsHand2 :: [([Char], [(Char, Int)])]
sevenShiftedPairsHand2 = [ (['n', 'e', 'K', 'S'], [('K', 3), ('K', 3)])
                         , (['n', 'e', 'K', 'S'], [('K', 4), ('K', 4)])
                         , (['n', 'e', 'K', 'S'], [('K', 5), ('K', 5)])
                         , (['n', 'e', 'K', 'S'], [('K', 6), ('K', 6)])
                         , (['n', 'e', 'K', 'S'], [('K', 7), ('K', 7)])
                         , (['n', 'e', 'K', 'S'], [('K', 8), ('K', 8)])
                         , (['r', 'e', 'K', 'T'], [('K', 9), ('K', 9)])
                         ]

grandChariotHand :: [([Char], [(Char, Int)])]
grandChariotHand = [ (['n', 'e', 'C', 'S'], [('C', 2), ('C', 2)])
                   , (['n', 'e', 'C', 'S'], [('C', 3), ('C', 3)])
                   , (['n', 'e', 'C', 'S'], [('C', 4), ('C', 4)])
                   , (['n', 'e', 'C', 'S'], [('C', 5), ('C', 5)])
                   , (['n', 'e', 'C', 'S'], [('C', 6), ('C', 6)])
                   , (['n', 'e', 'C', 'S'], [('C', 7), ('C', 7)])
                   , (['r', 'e', 'C', 'S'], [('C', 8), ('C', 8)])
                   ]

bambooForestHand :: [([Char], [(Char, Int)])]
bambooForestHand = [ (['n', 'e', 'B', 'S'], [('B', 2), ('B', 2)])
                   , (['n', 'e', 'B', 'S'], [('B', 3), ('B', 3)])
                   , (['n', 'e', 'B', 'S'], [('B', 4), ('B', 4)])
                   , (['n', 'e', 'B', 'S'], [('B', 5), ('B', 5)])
                   , (['n', 'e', 'B', 'S'], [('B', 6), ('B', 6)])
                   , (['n', 'e', 'B', 'S'], [('B', 7), ('B', 7)])
                   , (['r', 'e', 'B', 'S'], [('B', 8), ('B', 8)])
                   ]

numberNeighborhoodHand :: [([Char], [(Char, Int)])]
numberNeighborhoodHand = [ (['n', 'e', 'K', 'S'], [('K', 2), ('K', 2)])
                         , (['n', 'e', 'K', 'S'], [('K', 3), ('K', 3)])
                         , (['n', 'e', 'K', 'S'], [('K', 4), ('K', 4)])
                         , (['n', 'e', 'K', 'S'], [('K', 5), ('K', 5)])
                         , (['n', 'e', 'K', 'S'], [('K', 6), ('K', 6)])
                         , (['n', 'e', 'K', 'S'], [('K', 7), ('K', 7)])
                         , (['r', 'e', 'K', 'S'], [('K', 8), ('K', 8)])
                         ]


-- | 10.0 Color Hands

allGreenHand :: [([Char], [(Char, Int)])]
allGreenHand = [ (['n', 'p', 'B', 'S'], [('B', 2), ('B', 2), ('B', 2)])
               , (['r', 'c', 'B', 'S'], [('B', 2), ('B', 3), ('B', 4)])
               , (['r', 'p', 'B', 'S'], [('B', 6), ('B', 6), ('B', 6)])
               , (['r', 'p', 'D'], [('D', 2), ('D', 2), ('D', 2)])
               , (['r', 'e', 'B', 'S'], [('B', 8), ('B', 8)])
               ]

allRedHand :: [([Char], [(Char, Int)])]
allRedHand = [ (['n', 'p', 'B', 'S'], [('B', 1), ('B', 1), ('B', 1)])
             , (['r', 'p', 'B', 'S'], [('B', 5), ('B', 5), ('B', 5)])
             , (['r', 'p', 'B', 'S'], [('B', 9), ('B', 9), ('B', 9)])
             , (['r', 'p', 'D'], [('D', 1), ('D', 1), ('D', 1)])
             , (['r', 'e', 'B', 'S'], [('B', 7), ('B', 7)])
             ]

allBlueHand :: [([Char], [(Char, Int)])]
allBlueHand = [ (['n', 'p', 'W'], [('W', 2), ('W', 2), ('W', 2)])
              , (['r', 'p', 'W'], [('W', 3), ('W', 3), ('W', 3)])
              , (['r', 'p', 'W'], [('C', 8), ('C', 8), ('C', 8)])
              , (['r', 'p', 'W'], [('D', 3), ('D', 3), ('D', 3)])
              , (['r', 'e', 'W'], [('W', 4), ('W', 4)])
              , (['b'], [('F', 4)])
              ]


-- | 11.0 Irregular Hands

thirteenOrphanHand :: [([Char], [(Char, Int)])]
thirteenOrphanHand = [ ( ['r', 'h', 'B', 'T', 'W', 'D']
                       , [ ('C', 1), ('C', 9), ('B', 1), ('B', 9), ('K', 1), ('K', 9)
                           ('W', 1), ('W', [('C', 1), ('C', 2), ('W', 3), ('W', 4)
                           ('D', 1), ('D', [('C', 1), ('C', 2), ('D', 2), ('D', 3)
                         ]
                       )
                     , (['b'], [('F', 1, [('C', 1), ('C')])
                     ]


-- | 12.0 Incidental Bonuses

finalDrawHand :: [([Char], [(Char, Int)])] []
finalDrawHand = [] 

finalDiscardHand :: [([Char], [(Char, Int)])] []
finalDiscardHand = []

winOnKongHand :: [([Char], [(Char, Int)])] []
winOnKongHand = []

winOnBonusTileHand :: [([Char], [(Char, Int)])] []
winOnBonusTileHand = []

robbingKongHand :: [([Char], [(Char, Int)])] []
robbingKongHand = []

blessingOfHeavenHand :: [([Char], [(Char, Int)])] []
blessingOfHeavenHand = []

blessingOfEarthHand :: [([Char], [(Char, Int)])] []
blessingOfEarthHand = []


-- | 13.0 Bonus Tiles

nonSeatFlowerHand :: [([Char], [(Char, Int)])]
nonSeatFlowerHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                    , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                    , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                    , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                    , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
                    , (['b'], [('F', 3), ('S', 2)])
                    ]

nonSeatSeasonHand :: [([Char], [(Char, Int)])]
nonSeatSeasonHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                    , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                    , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                    , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                    , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
                    , (['b'], [('F', 2), ('S', 4)])
                    ]

seatFlowerHand :: [([Char], [(Char, Int)])]
seatFlowerHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                 , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                 , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                 , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                 , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
                 , (['b'], [('F', 1), ('S', 2)])
                 ]

seatSeasonHand :: [([Char], [(Char, Int)])]
seatSeasonHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                 , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                 , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                 , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                 , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
                 , (['b'], [('F', 2), ('S', 1)])
                 ]

fourFlowersHand :: [([Char], [(Char, Int)])]
fourFlowersHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                  , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                  , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                  , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                  , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
                  , (['b'], [('F', 1), ('F', 2), ('F', 3), ('F', 4)])
                  ]

fourSeasonsHand :: [([Char], [(Char, Int)])]
fourSeasonsHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                  , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                  , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                  , (['r', 'c', 'B', 'S'], [('B', 4), ('B', 5), ('B', 6)])
                  , (['c', 'e', 'W'], [('W', 3), ('W', 3)])
                  , (['b'], [('S', 1), ('S', 2), ('S', 3), ('S', 4)])
                  ]

allBonusTileHand :: [([Char], [(Char, Int)])]
allBonusTileHand = [ (['r', 'c', 'C', 'T'], [('C', 7), ('C', 8), ('C', 9)])
                   , (['r', 'p', 'W'], [('W', 1), ('W', 1), ('W', 1)])
                   , (['r', 'c', 'K', 'S'], [('K', 1), ('K', 2), ('K', 3)])
                   , (['l'], [('B', 4), ('B', 5), ('B', 6), ('B', 7)])
                   , (['b'], [ ('F', 1), ('F', 2), ('F', 3), ('F', 4)
                             , ('S', 1), ('S', 2), ('S', 3), ('S', 4)
                             ]
                     )
                   ]
